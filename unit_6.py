''' 23.6. Локаторы XPATH

XPath — это набор инструкций для обращения к любому элементу структурированного документа. Таким документом является
HTML-код веб страницы.

Такой путь к элементу /html/body/div/div/h1 есть абсолютный XPath локатор. Почему «абсолютный», и чем «абсолютный»
отличается от «относительного», мы поговорим чуть дальше.

$x() — это конструкция для работы с XPath в разделе Console.
Внутри вводим сам XPath в одинарных кавычках: $x('/html/body/div/div/h1')
Нажимаем в конце Enter.

Но можно указать на тот же заголовок проще: $x('//h1').
'//' выбирает узлы внутри текущего узла, соответствующие выбору, независимо от их местонахождения.

В чём разница относительных и абсолютных путей? И какие стоит использовать для автоматизации тестирования?

Абсолютный путь включает все элементы дерева и может быть очень сложным и долгим. Кроме того, если внутри тега
встречается несколько одинаковых тегов, то абсолютный путь будет содержать их индексы.

ВАЖНО! В XPath индексация начинается с 1, а не с 0.

Пример: поле ввода почты на форме регистрации сайта PetFriends имеет абсолютный XPath:
/html/body/div/div/form/div[2]/input. А поле ввода пароля — /html/body/div/div/form/div[3]/input.

Абсолютные пути очень сильно привязаны к структуре DOM-дерева. Появление ещё одного элемента <div> внутри тега <form>
сломает абсолютные пути к одному или нескольким полям формы регистрации, в зависимости от того, где в дереве появится
этот элемент. Поэтому в реальном автотестировании абсолютные пути не используют — они очень ненадежны для такой
динамической структуры, как веб-сайты.

Относительные пути начинаются с двойного «прямого» слеша. Это указание браузеру искать элемент по всех узлах DOM-дерева.

Обращение к атрибутам тега
Также локаторы XPath могут работать с любыми атрибутами тега. Примером может послужить обращение к первому полю формы
регистрации на сайте PetFriends: $x('//input[@id="name"]').

Сначала мы указываем тег, а в квадратных скобках и после символа @ — атрибут и его значение.

Применяя поиск по id, XPath можно сделать ещё более относительным. Если мы знаем только идентификатор, но не знаем,
где он находится на странице, то можем это выяснить, если подставим символ “*” (звёздочка): $x('//*[@id="name"]').

Такой локатор тоже укажет на первое поле формы регистрации «Уникальное имя». Кстати, если указать только атрибут без
значения, то можно узнать, используется ли вообще атрибут на странице, и если да, то сколько раз.

Пишем XPath самостоятельно
Общая формула написания относительного XPath — двойной слеш, тег, квадратные скобки, собачка, атрибут, значение.
«Спуск» по иерархии DOM-дерева осуществляется при помощи косой черты.

//tagname[@attribute='value']

Обратите внимание! В XPath значение атрибута класс копируется «как есть» — с пробелом (и точкой для данного случая).


'''